// Generated by CoffeeScript 2.6.1
import {
  cpus
} from 'os';

export default (max = cpus().length * 2) => {
  var f, n, todo;
  n = 0;
  todo = [];
  f = function() {
    var args, func;
    args = [...arguments];
    func = args[0];
    if (n < max) {
      ++n;
      return func(...args.slice(1)).finally(() => {
        if (todo.length) {
          return setImmediate(async() => {
            var err;
            while (todo.length) {
              args = todo.shift();
              try {
                await args[0](...args.slice(1));
              } catch (error) {
                err = error;
                console.error(err);
              }
            }
            return --n;
          });
        }
      });
    }
    return todo.push(args);
  };
  Object.defineProperty(f, 'pool', {
    writeable: false,
    get: async() => {
      while (true) {
        await Promise.all(todo);
        if (!todo.length) {
          return;
        }
      }
    }
  });
  return f;
};
