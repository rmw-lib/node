// Generated by CoffeeScript 2.6.1
//!/usr/bin/env coffee
var worker;

import {
  Worker
} from 'worker_threads';

import {
  parentPort
} from 'worker_threads';

export default worker = (func) => {
  func = `const {workerData,parentPort}=require('worker_threads');
(async ()=>{
try{
parentPort.postMessage([0,await (${func.toString()}).apply(null,workerData)])
}catch(err){
parentPort.postMessage([1,err])
}
})()`;
  return function(...args) {
    var w;
    w = new Worker(func, {
      eval: true,
      workerData: args
    });
    return new Promise((resolve, reject) => {
      return w.addListener('message', ([err, msg]) => {
        var next;
        if (err) {
          next = reject;
        } else {
          next = resolve;
        }
        next(msg);
      });
    });
  };
};
